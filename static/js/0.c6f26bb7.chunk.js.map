{"version":3,"file":"static/js/0.c6f26bb7.chunk.js","mappings":"2OACA,EAAuB,+B,SCiFvB,EAtEyB,SAAAA,GAAU,IAAD,IAChC,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAgB1C,OAdAC,EAAAA,EAAAA,YAAU,WACRR,GAAa,IACbS,EAAAA,EAAAA,IAAaR,GAASS,MAAK,SAAAC,GACzB,IAAQC,EAAkDD,EAAlDC,eAAgBC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,YAAaC,EAAWJ,EAAXI,OAC/CjB,EAAa,CACXc,eAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,OAAQA,EAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,MAEtBlB,GAAa,EACd,GACF,GAAE,CAACC,KAGF,2BACGF,IAAa,SAACoB,EAAA,EAAD,IACbtB,IACC,4BACE,SAAC,KAAD,CAAMuB,GAAIf,EAAUgB,UAAWC,EAA/B,sBAGA,gBACEC,IAAG,yCAAoC1B,EAAUiB,aACjDU,IAAK3B,EAAUe,kBAEjB,wBAAKf,EAAUe,kBACf,yCACA,sCACA,uBAAIf,EAAUgB,YACd,oCAEA,uBAAIhB,EAAUkB,OAAOU,KAAK,QAC1B,2BACE,sDACA,yBACE,SAAC,KAAD,CACEL,GAAG,OACHC,UAAWC,EACXhB,MAAO,CAAEC,KAAMF,GAHjB,qBAQF,yBACE,SAAC,KAAD,CACEe,GAAG,UACHC,UAAWC,EACXhB,MAAO,CAAEC,KAAMF,GAHjB,2BASJ,SAAC,EAAAqB,SAAD,WACE,SAAC,KAAD,WAMX,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsView/MovieDetailsView.module.css?9bce","pages/MovieDetailsView/MovieDetailsView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsView_link__GIcKa\"};","import { Spinner } from 'components/Spinner/Spinner';\nimport { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieById } from 'services/getMoviesAPI';\nimport styles from './MovieDetailsView.module.css';\n\nconst MovieDetailsView = props => {\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieById(movieId).then(data => {\n      const { original_title, overview, poster_path, genres } = data;\n      setMovieData({\n        original_title,\n        overview,\n        poster_path,\n        genres: genres.map(g => g.name),\n      });\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Spinner />}\n      {movieData && (\n        <div>\n          <Link to={backLink} className={styles.link}>\n            Go back\n          </Link>\n          <img\n            src={`https://image.tmdb.org/t/p/w400${movieData.poster_path}`}\n            alt={movieData.original_title}\n          />\n          <h2>{movieData.original_title}</h2>\n          <p>User Score: </p>\n          <h3>Overview</h3>\n          <p>{movieData.overview}</p>\n          <h3>Genres</h3>\n\n          <p>{movieData.genres.join(' ')}</p>\n          <ul>\n            <span>Additional infromation</span>\n            <li>\n              <NavLink\n                to=\"cast\"\n                className={styles.link}\n                state={{ from: backLink }}\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to=\"reviews\"\n                className={styles.link}\n                state={{ from: backLink }}\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsView;\n"],"names":["props","useState","movieData","setMovieData","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLink","state","from","useEffect","getMovieById","then","data","original_title","overview","poster_path","genres","map","g","name","Spinner","to","className","styles","src","alt","join","Suspense"],"sourceRoot":""}