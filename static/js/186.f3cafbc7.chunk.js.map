{"version":3,"file":"static/js/186.f3cafbc7.chunk.js","mappings":"iMAkCA,UA9BgB,SAAAA,GACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAAS,GAAO,GAAMO,MAAK,SAAAC,GACtCJ,EAAeI,EAAKC,QACrB,GACF,GAAE,CAACT,KAGF,yBACGG,EAAYO,OAAS,GACpB,wBACGP,EAAYQ,KAAI,SAAAC,GACf,OACE,2BACE,wBAAKA,EAAIC,UACT,uBAAID,EAAIE,YAFDF,EAAIG,GAKhB,OAGH,sDAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/getMoviesAPI';\n\nconst Reviews = props => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    getMovieById(movieId, false, true).then(data => {\n      setReviewsData(data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviewsData.length > 0 ? (\n        <ul>\n          {reviewsData.map(rev => {\n            return (\n              <li key={rev.id}>\n                <h5>{rev.author}</h5>\n                <p>{rev.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h3>Sorry, reviews not found</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["props","movieId","useParams","useState","reviewsData","setReviewsData","useEffect","getMovieById","then","data","results","length","map","rev","author","content","id"],"sourceRoot":""}